
Allocating common symbols
Common symbol       size              file

j                   0x4               startup.o
i                   0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
flash            0x08000000         0x00020000         xr
sram             0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map


.text           0x08000000      0x1cc
 *(.vectors*)
 .vectors       0x08000000       0x20 startup.o
                0x08000000                vectors
 *(.text*)
 .text          0x08000020       0xa8 main.o
                0x08000020                main
 .text          0x080000c8      0x100 startup.o
                0x080000c8                reset_handler
                0x080001bc                BusFault
                0x080001bc                Hard_Fault
                0x080001bc                Default_Handler
                0x080001bc                Usage_Fault
                0x080001bc                SV_Call
                0x080001bc                MemManage
                0x080001bc                NMI
 *(.rodata*)
 .rodata        0x080001c8        0x4 main.o
                0x080001c8                const_variables
                0x080001cc                _E_text = .

.glue_7         0x080001cc        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x080001cc        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x080001cc        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x080001cc        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x080001cc        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x080001cc        0x0
 .rel.iplt      0x00000000        0x0 main.o

.data           0x20000000        0x8 load address 0x080001cc
                0x20000000                _S_data = .
 *(.data*)
 .data          0x20000000        0x8 main.o
                0x20000000                R_ODR
                0x20000004                g_variables
 .data          0x20000008        0x0 startup.o
                0x20000008                _E_data = .

.igot.plt       0x20000008        0x0 load address 0x080001d4
 .igot.plt      0x00000000        0x0 main.o

.bss            0x20000008     0x100c load address 0x080001d4
                0x20000008                _S_bss = .
 *(.bss*)
 .bss           0x20000008        0x4 main.o
                0x20000008                bss_global_var
 .bss           0x2000000c        0x0 startup.o
                0x2000000c                . = ALIGN (0x4)
                0x2000000c                _E_bss = .
                0x2000100c                . = (. + 0x1000)
 *fill*         0x2000000c     0x1000 
                0x2000100c                _stack_top = .
 COMMON         0x2000100c        0x4 main.o
                0x2000100c                i
 COMMON         0x20001010        0x4 startup.o
                0x20001010                j
LOAD main.o
LOAD startup.o
OUTPUT(learn-in-depth_cortex_M3.elf elf32-littlearm)

.debug_info     0x00000000      0x2b7
 .debug_info    0x00000000      0x14a main.o
 .debug_info    0x0000014a      0x16d startup.o

.debug_abbrev   0x00000000      0x1af
 .debug_abbrev  0x00000000       0xe9 main.o
 .debug_abbrev  0x000000e9       0xc6 startup.o

.debug_loc      0x00000000       0x9c
 .debug_loc     0x00000000       0x38 main.o
 .debug_loc     0x00000038       0x64 startup.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 startup.o

.debug_line     0x00000000      0x102
 .debug_line    0x00000000       0x56 main.o
 .debug_line    0x00000056       0xac startup.o

.debug_str      0x00000000      0x18d
 .debug_str     0x00000000       0xcb main.o
                                 0xd8 (size before relaxing)
 .debug_str     0x000000cb       0xc2 startup.o
                                0x15b (size before relaxing)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 startup.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 main.o
 .ARM.attributes
                0x00000033       0x33 startup.o

.debug_frame    0x00000000       0x78
 .debug_frame   0x00000000       0x2c main.o
 .debug_frame   0x0000002c       0x4c startup.o
